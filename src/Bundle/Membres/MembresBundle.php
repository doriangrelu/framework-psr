<?php
/**
 * Created by PhpStorm.
 * User: doria
 * Date: 09/12/2017
 * Time: 11:11
 */

namespace App\Bundle\Membres;


use App\Bundle\Auth\Controller\Totp;
use App\Bundle\Auth\Model\Connexion;
use App\Bundle\Bundle;
use App\Bundle\Database\Table\UsersTable;
use App\Bundle\Membres\Controller\Clients;
use App\Bundle\Membres\Controller\Devis;
use App\Bundle\Membres\Controller\Informations;
use App\Bundle\Membres\Controller\Pages;
use Framework\Router;
use Framework\Router\RouterInterface;
use Framework\Router\RouteScope;
use Psr\Container\ContainerInterface;
use Psr\Http\Message\ServerRequestInterface;

class MembresBundle extends Bundle
{
    /**
     * @var UsersTable
     */
    protected $usersTable;

    /**
     * @var Connexion
     */
    protected $connexionmodel;

    /**
     * @var int
     */
    protected $usersId;

    public function initialize(ServerRequestInterface $request, ContainerInterface $container)
    {
        parent::initialize($request, $container); // TODO: Change the autogenerated stub
        $this->usersTable = $this->table->load(UsersTable::class);
        $this->renderer->make([
            "users" => $this->usersTable->find($this->session->get(Connexion::ID_SESSION))
        ]);
        $this->renderer->setLayout("Membre");
        $this->usersId = $this->session->get(Connexion::ID_SESSION);
    }

    public static function routes(Router $router): void
    {
        $router->scope("/dashboard/", function (RouteScope $routes) {
            $routes->get("/", [Pages::class, "home"], "membre.home");
            $routes->get("/statistiques", [Pages::class, "statistiques"], "membre.stats");
            $routes->get("/telecharger-statistiques", [Pages::class, "getCsvNouveauxClients"], "membre.stats.down");
            $routes->post("set-informations", [Informations::class, "setInformations"], "membre.setInformations");
            $routes->post("set-informations-entreprise",
                [Informations::class, "setInformationsEntreprise"],
                "membre.setInformationsEntreprise"
            );
            $routes->scope("devis", function (RouteScope $routes) {
                $routes->get("/", [Pages::class, "devis"], "devis");
                $routes->get("/nouveau", [Pages::class, "nouveauDevis"], "devis.new");
                $routes->post("/", [Devis::class, "creer"], "membre.devis.create");
                $routes->get("/afficher-pdf-:slug", [Devis::class, "pdf"], "membre.devis.pdf")
                    ->width("slug", "[0-9]+");
                $routes->get("/afficher-:slug", [Devis::class, "afficher"], "membre.devis.show")
                    ->width("slug", "[0-9]+");
                $routes->post("/modifier", [Devis::class, "modifier"], "membre.devis.update");
            });

            $routes->scope("factures", function (RouteScope $routes){
                $routes->get("/", [Pages::class, "factures"], "facture.list");
            });

            self::donneesRoutes($routes);

        });
    }

    private static function donneesRoutes(RouteScope $routes)
    {
        $routes->scope("/donnees/", function (RouteScope $routes) {
            $routes->scope("clients", function (RouteScope $routes) {
                $routes->get("/", [\App\Bundle\Membres\Controller\Pages::class, "clients"], "membre.clients");
                $routes->get("/:type-:id", [Clients::class, "afficher"], "membre.client.afficher")
                    ->width("id", "[0-9]+")
                    ->width("type", "[a-z]+");

                $routes->post("/modifier-:type-:id", [Clients::class, "modifier"], "membre.client.modifier")->width("id", "[0-9]+")
                    ->width("type", "[a-z]+");

                $routes->post("supprimer-:type-:id", [Clients::class, "supprimer"], "membre.client.supprimer")
                    ->width("id", "[0-9]+")
                    ->width("type", "[a-z]+");

                $routes->post("modifier-type-:type-:id", [Clients::class, "modifierType"], "membre.client.changer-type")
                    ->width("id", "[0-9]+")
                    ->width("type", "[a-z]+");

                $routes->post("vider-base-client", [Clients::class, "vider"], "membre.client.truncate");

                $routes->post("ajouter", [Clients::class, "ajouter"], "membre.clients.ajouter");
                $routes->post("liste-professionnel", [Clients::class, "getListeProfessionnel"], "membre.clients.pro");
                $routes->post("liste-particulier", [Clients::class, "getListeParticulier"], "membre.clients.par");
            });


            $routes->get("/prospects/", [\App\Bundle\Membres\Controller\Pages::class, "prospects"], "membre.prospects");
        });

    }


}